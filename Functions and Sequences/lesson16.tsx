import type { Metadata } from "next";
import { MustKnow } from "@/components/ui/MustKnow";
import { ExampleCard } from "@/components/ui/ExampleCard";
import { MCQExample } from "@/components/ui/MCQExample";
import { InlineMath, BlockMath } from "react-katex";

export const metadata: Metadata = {
  title: "19.16 Sequences | Functions and Sequences",
  description:
    "Understand sequences as functions on the positive integers. Learn notation, evaluate terms from a rule, and practice with a multiple‑choice and a Data Sufficiency example.",
};

export default function Page() {
  return (
    <main className="mx-auto w-full max-w-4xl px-4 py-8 md:py-12">
      <header className="mb-8">
        <h1 className="mt-2 text-2xl font-bold text-white md:text-3xl">
          19. Functions and Sequences
        </h1>
        <h2 className="mt-1 text-lg font-semibold text-gray-200">
          19.16 Sequences
        </h2>
      </header>

      <article className="space-y-6 text-gray-300">
        <p>
          A sequence is simply a function whose inputs are the positive integers.
          In other words, each term is generated by a rule, one integer index at a time.
          For instance, the list 0, 3, 6, 9, 12, … can be described by the rule{" "}
          <InlineMath math={"f(n)=3(n-1)"} /> for <InlineMath math={"n=1,2,3,\\dots"} />.
        </p>

        <p>
          Using sequence notation, we typically write <InlineMath math={"a_n"} /> in place of{" "}
          <InlineMath math={"f(n)"} />. The same example can be written as{" "}
          <InlineMath math={"a_n=3(n-1)"} />, where <InlineMath math={"a_1,a_2,a_3,\\dots"} /> are the first,
          second, third, … terms. To find any particular term, plug the index into the rule; for example,
          <InlineMath math={"a_{10}=3(10-1)=27"} /> and{" "}
          <InlineMath math={"a_{100}=3(100-1)=297"} />.
        </p>

        <MustKnow>
          Every sequence is governed by a specific rule. Without that rule, the later terms are not fixed,
          even if you know the first few values. A list of terms alone does not determine the sequence.
        </MustKnow>

        <MCQExample
          number={40}
          prompt={
            <>
              Given <InlineMath math={"S_n=n^2-1"} />, what is{" "}
              <InlineMath math={"\\dfrac{S_5}{S_3}"} />?
            </>
          }
          options={["1", "2", "3", "4", "5"]}
          correct="3"
          solution={
            <>
              <p>
                Evaluate the needed terms from the rule <InlineMath math={"S_n=n^2-1"} />:
              </p>
              <div className="space-y-1">
                <BlockMath math={"S_3=3^2-1=8"} />
                <BlockMath math={"S_5=5^2-1=24"} />
              </div>
              <BlockMath math={"\\dfrac{S_5}{S_3}=\\dfrac{24}{8}=3"} />
              <p>So the correct choice is 3.</p>
            </>
          }
        />

        <p>
          Different letters can be used for sequences: <InlineMath math={"a_n"} />,{" "}
          <InlineMath math={"b_n"} />, <InlineMath math={"S_n"} />, and so on. The key is the rule that
          defines how each term is produced from its index or from previous terms.
        </p>

        <ExampleCard
          number={41}
          title="Data Sufficiency — Determining a Term of a Sequence"
          statements={[
            "If x is the fifth term of a sequence a_n, what is the value of x?",
            "1)  The first four terms of a_n are 2, 4, 16, 256.",
            "2)  Starting with the 2nd term, each term equals the square of the preceding term.",
          ]}
          correctLetter="C"
          solution={
            <>
              <p>
                We need the fifth term, <InlineMath math={"x=a_5"} />.
              </p>
              <p>
                <strong>Statement (1) only:</strong> The first four terms are 2, 4, 16, 256. This list by itself
                does not lock in a unique rule; many different sequences could begin this way and then continue
                differently. So we can’t infer <InlineMath math={"a_5"} />. Not sufficient.
              </p>
              <p>
                <strong>Statement (2) only:</strong> We know how to move from term to term (square the previous),
                but we don’t know any starting value. Without the first term, every subsequent term is still unknown.
                Not sufficient.
              </p>
              <p>
                <strong>Together:</strong> With the first four terms from (1) and the squaring rule from (2),
                the sequence is fully specified from the start. Thus{" "}
                <InlineMath math={"a_5=(a_4)^2=256^2=65{,}536"} />. Sufficient.
              </p>
              <p>Answer: C.</p>
            </>
          }
        />

        <p>
          Bottom line: sequences are rules-first. Once the rule is known (and any needed starting value is provided),
          you can compute any term you want.
        </p>
      </article>
    </main>
  );
}